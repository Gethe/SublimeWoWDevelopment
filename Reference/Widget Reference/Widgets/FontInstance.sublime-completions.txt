{
	"scope": "source.lua - entity - punctuation - keyword - string",
	"completions": [
		{
			"trigger": "FontInstance:GetDebugName\t()",
			"contents": "${1:FontInstance}:GetDebugName()$0",
		},
		{
			"trigger": "FontInstance:GetFont\t()",
			"contents": "${1:FontInstance}:GetFont()$0",
		},
		{
			"trigger": "FontInstance:GetFontObject\t()",
			"contents": "${1:FontInstance}:GetFontObject()$0",
		},
		{
			"trigger": "FontInstance:GetJustifyH\t()",
			"contents": "${1:FontInstance}:GetJustifyH()$0",
		},
		{
			"trigger": "FontInstance:GetJustifyV\t()",
			"contents": "${1:FontInstance}:GetJustifyV()$0",
		},
		{
			"trigger": "FontInstance:GetName\t()",
			"contents": "${1:FontInstance}:GetName()$0",
		},
		{
			"trigger": "FontInstance:GetObjectType\t()",
			"contents": "${1:FontInstance}:GetObjectType()$0",
		},
		{
			"trigger": "FontInstance:GetShadowColor\t()",
			"contents": "${1:FontInstance}:GetShadowColor()$0",
		},
		{
			"trigger": "FontInstance:GetShadowOffset\t()",
			"contents": "${1:FontInstance}:GetShadowOffset()$0",
		},
		{
			"trigger": "FontInstance:GetSpacing\t()",
			"contents": "${1:FontInstance}:GetSpacing()$0",
		},
		{
			"trigger": "FontInstance:GetTextColor\t()",
			"contents": "${1:FontInstance}:GetTextColor()$0",
		},
		{
			"trigger": "FontInstance:IsForbidden\t()",
			"contents": "${1:FontInstance}:IsForbidden()$0",
		},
		{
			"trigger": "FontInstance:IsObjectType\t()",
			"contents": "${1:FontInstance}:IsObjectType()$0",
		},
		{
			"trigger": "FontInstance:SetFont\t(\"filename\", fontHeight, \"flags\")",
			"contents": "${1:FontInstance}:SetFont(\"${2:filename}\", ${3:fontHeight}, \"${4:flags}\")$0",
		},
		{
			"trigger": "FontInstance:SetFontObject\t(font)",
			"contents": "${1:FontInstance}:SetFontObject(${2:font})$0",
		},
		{
			"trigger": "FontInstance:SetJustifyH\t(\"justify\")",
			"contents": "${1:FontInstance}:SetJustifyH(\"${2:justify}\")$0",
		},
		{
			"trigger": "FontInstance:SetJustifyV\t(\"justify\")",
			"contents": "${1:FontInstance}:SetJustifyV(\"justify\")$0",
		},
		{
			"trigger": "FontInstance:SetShadowColor\t(shadowRed, shadowGreen, shadowBlue, shadowAlpha)",
			"contents": "${1:FontInstance}:SetShadowColor(${2:shadowRed}, ${3:shadowGreen}, ${4:shadowBlue}, ${5:shadowAlpha})$0",
		},
		{
			"trigger": "FontInstance:SetShadowOffset\t(xOffset, yOffset)",
			"contents": "${1:FontInstance}:SetShadowOffset(${2:xOffset}, ${3:yOffset})$0",
		},
		{
			"trigger": "FontInstance:SetSpacing\t(spacing)",
			"contents": "${1:FontInstance}:SetSpacing(${2:spacing})$0",
		},
		{
			"trigger": "FontInstance:SetTextColor\t(textRed, textGreen, textBlue, textAlpha)",
			"contents": "${1:FontInstance}:SetTextColor(${2:textRed}, ${3:textGreen}, ${4:textBlue}, ${5:textAlpha})$0",
		},




		{
			"trigger": "_FontInstance:GetDebugName\t()",
			"contents": "${1:name} = ${2:FontInstance}:GetDebugName()$0",
		},
		{
			"trigger": "_FontInstance:GetFont\t()",
			"contents": "${1:filename}, ${2:fontHeight}, ${3:flags} = ${4:FontInstance}:GetFont()$0",
		},
		{
			"trigger": "_FontInstance:GetFontObject\t()",
			"contents": "${1:font} = ${2:FontInstance}:GetFontObject()$0",
		},
		{
			"trigger": "_FontInstance:GetJustifyH\t()",
			"contents": "${1:justify} = ${2:FontInstance}:GetJustifyH()$0",
		},
		{
			"trigger": "_FontInstance:GetJustifyV\t()",
			"contents": "${1:justify} = ${2:FontInstance}:GetJustifyV()$0",
		},
		{
			"trigger": "_FontInstance:GetName\t()",
			"contents": "${1:name} = ${2:FontInstance}:GetName()$0",
		},
		{
			"trigger": "_FontInstance:GetObjectType\t()",
			"contents": "${1:type} = ${2:FontInstance}:GetObjectType()$0",
		},
		{
			"trigger": "_FontInstance:GetShadowColor\t()",
			"contents": "${1:shadowR}, ${2:shadowG}, ${3:shadowB}, ${4:shadowAlpha} = ${5:FontInstance}:GetShadowColor()$0",
		},
		{
			"trigger": "_FontInstance:GetShadowOffset\t()",
			"contents": "${1:xOffset}, ${2:yOffset} = ${3:FontInstance}:GetShadowOffset()$0",
		},
		{
			"trigger": "_FontInstance:GetSpacing\t()",
			"contents": "${1:spacing} = ${2:FontInstance}:GetSpacing()$0",
		},
		{
			"trigger": "_FontInstance:GetTextColor\t()",
			"contents": "${1:textR}, ${2:textG}, ${3:textB}, ${4:textAlpha} = ${5:FontInstance}:GetTextColor()$0",
		},
		{
			"trigger": "_FontInstance:IsForbidden\t()",
			"contents": "${1:isForbidden} = ${2:FontInstance}:IsForbidden()$0",
		},
		{
			"trigger": "_FontInstance:IsObjectType\t(\"type\")",
			"contents": "${1:isType} = ${2:FontInstance}:IsObjectType(\"${3:type}\")$0",
		},
		{
			"trigger": "_FontInstance:SetFont\t(\"filename\", fontHeight, \"flags\")",
			"contents": "${1:isValid} = ${2:FontInstance}:SetFont(\"${3:filename}\", ${4:fontHeight}, \"${5:flags}\")$0",
		},




		{
			"trigger": "_FontInstance\thelp",
			"contents": "FontInstance = {\n\tinherits = {\n\t\t\"FontInstance\",\n\t\t\"UIObject\",\n\t},\n\tmethods = {\n\t\t\"GetDebugName\",\n\t\t\"GetFont\",\n\t\t\"GetFontObject\",\n\t\t\"GetJustifyH\",\n\t\t\"GetJustifyV\",\n\t\t\"GetName\",\n\t\t\"GetObjectType\",\n\t\t\"GetShadowColor\",\n\t\t\"GetShadowOffset\",\n\t\t\"GetSpacing\",\n\t\t\"GetTextColor\",\n\t\t\"IsForbidden\",\n\t\t\"IsObjectType\",\n\t\t\"SetFont\",\n\t\t\"SetFontObject\",\n\t\t\"SetJustifyH\",\n\t\t\"SetJustifyV\",\n\t\t\"SetShadowColor\",\n\t\t\"SetShadowOffset\",\n\t\t\"SetSpacing\",\n\t\t\"SetTextColor\",\n\t},\n}",
		},
	]
}
